#include "stm32l1xx_nucleo.h"
#define LUT_size 51 

uint16_t coeffs[LUT_size+1]={1024,1152,1279,1401,1517,1626,1725,1813,1889,1951,1998,2030,2046,2046,2030,1998,1951,1889,1813,1725,1626,1517,1401,1279,1152,1024,896,769,647,531,422,323,235,159,97,50,18,2,2,18,50,97,159,235,323,422,531,647,769,896,1024};


int i = 0;

void ConfigADC()
{
  RCC->AHBENR|=0x07; // Horloge A B C
  /* ENTREE ANALOGIQUE ADC*/
  GPIOC->MODER|=0x03;
  /*activation de l'horloge sur l'ADC*/
  RCC->APB2ENR |= (1<<9);
  /*activation de l'horloge sur le RI (COMPEN)*/
   RCC->APB1ENR |= (1<<31);
  /*activation de la HSI CLOCK*/
  RCC->CR |= (1<<0);
  /*choix du prescalaire*/
  ADC->CCR =1;
}
 
uint16_t read_ADC()
{  
    uint16_t conv;
    ADC1->CR2 &= ~(1<<0);
    /*1 seul  canal de conversion*/
    ADC1->SQR1 &=(~((1<<24)|(1<<23)|(1<<22)|(1<<21)));
    ADC1->SQR5 = 0x00;
    /*Routage interfacing*/
    /* Création Lien PC0 à l'ADC*/
    RI->ASCR1 |=(1<<10);
    
    
    /*activation de l'adc*/
    ADC1->CR2 |= (1<<0);
   
    /*tant que le periph n'est pas pret j' attends*/
    while((ADC1->SR &(1<<6)) == 0);
    /*lancement conversion*/
    ADC1->CR2 |= (1<<30);
    /*tant que la conversion n'est pas finie j' attends*/
     while((ADC1->SR &(1<<1)) == 0);
    conv= ADC1->DR;
    return conv;
   
}

void TIM2_IRQHandler (void)
{
    TIM2->SR &= ~(0x01);
    DAC->DHR12R1=coeffs[i]; // !!!!!!!!!!! Faire lire la valeur de sorti de l'ADC avec readADC() 
    if (i == LUT_size)
      {
        i = 0;
      }
      else
      {        
        i++;
      }
}

void configure_dac ()
{
  RCC->APB1ENR |= (1<<29);
  GPIOA->MODER |= ((1<<9) | (1<<8));
  /* Activation du Buffer */
  DAC->CR = (1<<1);

  /* Activation du DAC */
  DAC->CR = (1<<0);
}


void ConfigTIM2 ()			//CTN represente la valeur en Khz voulu
{
    NVIC->ISER[0] |= 1<<28;                     //TIM2_IRQHandler = 28
    RCC->APB1ENR |= 1<<0;                       //configure l'horloge de TIM2
    TIM2->PSC = 1;                            //Configurer TIM2 avec : PSC+1 * ARR+1 = Fclk/Fctn avec Fclk = 16MHz
    TIM2->ARR = 399;   // !!!!!!!!!!  pour test DAC 726                        
    TIM2->CR1 |= 0x00;                          //"Eteint" le TIMER
    TIM2->DIER |= 0x01;                         //Autorise l'interruption
}

int main (void)
{
    i = 0;  
    
    ConfigTIM2();
    ConfigADC();
    configure_dac();
    TIM2->CR1 |= 0x01;
    
    while (1)                                   //Boucle Infini
    {      
    }
    
}

